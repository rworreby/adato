version: 2.1

executors:
    default_env:
        docker:
            - image: circleci/python:3.7
        working_directory: ~/repo


jobs:
    build:
        executor: default_env
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - run:
                name: Install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
            - save_cache:
                      key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
                      paths:
                        - "venv"

    linter:
        executor: default_env
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - run:
                name: Run linter
                command: |
                    . venv/bin/activate
                    mkdir linter-results
                    flake8 --exclude=venv* --statistics > /linter-results
            - store_artifacts:
                path: linter-results
                destination: linter


    tests:
        executor: default_env
        steps:
            - checkout
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - run:
                name: Run tests
                command: |
                    . venv/bin/activate
                    mkdir test-results
                    pytest -v --junitxml=test-results/junit.xml --cov=app/
            - store_test_results:
                path: test-results
            - store_artifacts:
                path: test-results
                destination: tests


workflows:
    version: 2
    dependencies:
        jobs:
            - build
            - linter:
                requires:
                    - build
            - tests:
                requires:
                    - build
